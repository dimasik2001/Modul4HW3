// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modul4HW3;

namespace Modul4HW3.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modul4HW3.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasMaxLength(7)
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1943, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Henry",
                            LastName = "Ford",
                            Revenue = 269000m
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1993, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Pasha",
                            LastName = "Pavlov",
                            Revenue = 70000000m
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1977, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Max",
                            LastName = "Maximov",
                            Revenue = 29990m
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(2000, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Liza",
                            LastName = "Lizova",
                            Revenue = 130000m
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1934, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Don",
                            LastName = "Red",
                            Revenue = 13000m
                        });
                });

            modelBuilder.Entity("Modul4HW3.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("HiredDate")
                        .HasMaxLength(7)
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1999, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vlad",
                            HiredDate = new DateTime(2020, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Vladov",
                            OfficeId = 1,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1990, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ivan",
                            HiredDate = new DateTime(2020, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Stepanov",
                            OfficeId = 1,
                            TitleId = 1
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1954, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mark",
                            HiredDate = new DateTime(2000, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Fedorov",
                            OfficeId = 2,
                            TitleId = 2
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1968, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Tom",
                            HiredDate = new DateTime(2010, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Black",
                            OfficeId = 2,
                            TitleId = 2
                        });
                });

            modelBuilder.Entity("Modul4HW3.Entities.EmployeeProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartedDate")
                        .HasMaxLength(7)
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProject");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            ProjectId = 1,
                            Rate = 557m,
                            StartedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            ProjectId = 1,
                            Rate = 557m,
                            StartedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 3,
                            ProjectId = 1,
                            Rate = 100m,
                            StartedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 4,
                            ProjectId = 1,
                            Rate = 100m,
                            StartedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            EmployeeId = 3,
                            ProjectId = 2,
                            Rate = 557m,
                            StartedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            EmployeeId = 4,
                            ProjectId = 3,
                            Rate = 557m,
                            StartedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            EmployeeId = 3,
                            ProjectId = 5,
                            Rate = 100m,
                            StartedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            EmployeeId = 1,
                            ProjectId = 4,
                            Rate = 100m,
                            StartedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Modul4HW3.Entities.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "USA, NewYork",
                            Title = "IT Office"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Ukraine, Kharkiv",
                            Title = "Zavod"
                        });
                });

            modelBuilder.Entity("Modul4HW3.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartedDate")
                        .HasMaxLength(7)
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 1550m,
                            ClientId = 1,
                            Name = "MyBestFrameWork",
                            StartedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Budget = 15500m,
                            ClientId = 2,
                            Name = "MyBestWebSite",
                            StartedDate = new DateTime(2020, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Budget = 15750m,
                            ClientId = 3,
                            Name = "antivirus",
                            StartedDate = new DateTime(2021, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Budget = 1550m,
                            ClientId = 4,
                            Name = "SomeProject",
                            StartedDate = new DateTime(1991, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Budget = 1550m,
                            ClientId = 5,
                            Name = "SomeService",
                            StartedDate = new DateTime(2001, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Modul4HW3.Entities.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Programmer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Worker"
                        });
                });

            modelBuilder.Entity("Modul4HW3.Entities.Employee", b =>
                {
                    b.HasOne("Modul4HW3.Entities.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modul4HW3.Entities.Title", "Title")
                        .WithMany("Employees")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Modul4HW3.Entities.EmployeeProject", b =>
                {
                    b.HasOne("Modul4HW3.Entities.Employee", "Employee")
                        .WithMany("EmployeeProject")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modul4HW3.Entities.Project", "Project")
                        .WithMany("EmployeeProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Modul4HW3.Entities.Project", b =>
                {
                    b.HasOne("Modul4HW3.Entities.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Modul4HW3.Entities.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Modul4HW3.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeProject");
                });

            modelBuilder.Entity("Modul4HW3.Entities.Office", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Modul4HW3.Entities.Project", b =>
                {
                    b.Navigation("EmployeeProject");
                });

            modelBuilder.Entity("Modul4HW3.Entities.Title", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
